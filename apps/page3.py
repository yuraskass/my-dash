import dash
from dash import html, dcc, ctx
import dash_leaflet as dl
from dash.dependencies import Input, Output
import pandas as pd
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler

dash.register_page(__name__)

# Загружаем данные
df = pd.read_csv("Книга3.csv")

# Убедимся, что координаты числовые
df["широта"] = pd.to_numeric(df["широта"], errors="coerce")
df["долгота"] = pd.to_numeric(df["долгота"], errors="coerce")

# Удалим строки без координат
df = df.dropna(subset=["широта", "долгота"])

# Убедимся, что год — строка
if "год" in df.columns:
    df["Год"] = df["Год"].astype(str)

# Длинные названия индикаторов
indicator_columns = [
    "численность населения в трудоспособном возрасте на 1 января текущего года (человек, на 1 января, всего в трудоспособном возрасте (для мужчин 16-59,для женщин 16-54))",
    "количество стационарных источников загрязнения атмосферы на конец года, имеющихся у юридических лиц (единица, значение показателя за год) всего по всем видам экономической деятельности",
    "количество стационарных источников загрязнения атмосферы на конец года, имеющихся у юридических лиц (единица, значение показателя за год) растениеводство и животноводство, охота и предоставление соответствующих услуг в этих областях",
    "количество стационарных источников загрязнения атмосферы на конец года, имеющихся у юридических лиц (единица, значение показателя за год) лесоводство и лесозаготовки",
    "количество стационарных источников загрязнения атмосферы на конец года, имеющихся у юридических лиц (единица, значение показателя за год) обработка древесины и производство изделий из дерева и пробки, кроме мебели, производство изделий из соломки и материалов для плетения",
    "количество стационарных источников загрязнения атмосферы на конец года, имеющихся у юридических лиц (единица, значение показателя за год) обеспечение электрической энергией, газом и паром; кондиционирование воздуха",
    "количество стационарных источников загрязнения атмосферы на конец года, имеющихся у юридических лиц (единица, значение показателя за год) торговля оптовая, кроме оптовой торговли автотранспортными средствами и мотоциклами",
    "количество стационарных источников загрязнения атмосферы на конец года, имеющихся у юридических лиц (единица, значение показателя за год) торговля розничная, кроме торговли автотранспортными средствами и мотоциклами",
    "количество стационарных источников загрязнения атмосферы на конец года, имеющихся у юридических лиц (единица, значение показателя за год) деятельность сухопутного и трубопроводного транспорта",
    "количество стационарных источников загрязнения атмосферы на конец года, имеющихся у юридических лиц (единица, значение показателя за год) складское хозяйство и вспомогательная транспортная деятельность",
    "количество стационарных источников загрязнения атмосферы на конец года, имеющихся у юридических лиц (единица, значение показателя за год) деятельность в области здравоохранения",
    "количество стационарных источников загрязнения атмосферы на конец года, имеющихся у юридических лиц (единица, значение показателя за год) добыча металлических руд",
    "количество стационарных источников загрязнения атмосферы на конец года, имеющихся у юридических лиц (единица, значение показателя за год) деятельность в области телевизионного и радиовещания",
    "количество стационарных источников загрязнения атмосферы на конец года, имеющихся у юридических лиц (единица, значение показателя за год) деятельность по уходу с обеспечением проживания",
    "количество стационарных источников загрязнения атмосферы на конец года, имеющихся у юридических лиц (единица, значение показателя за год) производство пищевых продуктов",
    "количество стационарных источников загрязнения атмосферы на конец года, имеющихся у юридических лиц (единица, значение показателя за год) деятельность библиотек, архивов, музеев и прочих объектов культуры",
    "количество стационарных источников загрязнения атмосферы на конец года, имеющихся у юридических лиц (единица, значение показателя за год) деятельность в области спорта, отдыха и развлечений",
    "количество стационарных источников загрязнения атмосферы на конец года, имеющихся у юридических лиц (единица, значение показателя за год) прочие",
    "количество стационарных источников загрязнения атмосферы на конец года, имеющихся у юридических лиц (единица, значение показателя за год) работы строительные специализированные",
    "количество стационарных источников загрязнения атмосферы на конец года, имеющихся у юридических лиц (единица, значение показателя за год) деятельность в сфере телекоммуникаций",
    "количество стационарных источников загрязнения атмосферы на конец года, имеющихся у юридических лиц (единица, значение показателя за год) рыболовство и рыбоводство",
    "количество стационарных источников загрязнения атмосферы на конец года, имеющихся у юридических лиц (единица, значение показателя за год) строительство зданий",
    "количество стационарных источников загрязнения атмосферы на конец года, имеющихся у юридических лиц (единица, значение показателя за год) торговля оптовая и розничная автотранспортными средствами и мотоциклами и их ремонт",
    "количество стационарных источников загрязнения атмосферы на конец года, имеющихся у юридических лиц (единица, значение показателя за год) деятельность воздушного и космического транспорта",
    "количество стационарных источников загрязнения атмосферы на конец года, имеющихся у юридических лиц (единица, значение показателя за год) деятельность по обслуживанию зданий и территорий",
    "количество стационарных источников загрязнения атмосферы на конец года, имеющихся у юридических лиц (единица, значение показателя за год) добыча угля",
    "количество стационарных источников загрязнения атмосферы на конец года, имеющихся у юридических лиц (единица, значение показателя за год) деятельность в области архитектуры и инженерно-технического проектирования; технических испытаний, исследований и анализа",
    "количество стационарных источников загрязнения атмосферы на конец года, имеющихся у юридических лиц (единица, значение показателя за год) производство металлургическое",
    "количество стационарных источников загрязнения атмосферы на конец года, имеющихся у юридических лиц (единица, значение показателя за год) добыча прочих полезных ископаемых",
    "количество стационарных источников загрязнения атмосферы на конец года, имеющихся у юридических лиц (единица, значение показателя за год) производство химических веществ и химических продуктов",
    "количество стационарных источников загрязнения атмосферы на конец года, имеющихся у юридических лиц (единица, значение показателя за год) добыча нефти и природного газа"
]


years = sorted(df["Год"].unique())

layout = html.Div([
    html.H2("Карта с кластеризацией и показателями", style={"textAlign": "center"}),

    dcc.Dropdown(
        id="year-dropdown",
        options=[{"label": year, "value": year} for year in years],
        value=years[0],
        clearable=False,
        style={"width": "300px", "margin": "0 auto"}
    ),

    dcc.Dropdown(
        id="indicator-dropdown",
        options=[{"label": name, "value": name} for name in indicator_columns],
        value=indicator_columns[0],
        clearable=False,
        style={"width": "300px", "margin": "0 auto", "marginTop": "20px"}
    ),

    dl.Map(
        id="map",
        center=[61, 105],
        zoom=4,
        style={"height": "600px", "width": "100%", "marginTop": "20px"},
        children=[
            dl.TileLayer(),
            dl.LayerGroup(id="markerss"),
        ]
    ),
])

@dash.callback(
    Output("markerss", "children"),
    Input("year-dropdown", "value"),
    Input("indicator-dropdown", "value")
)
def update_markerss(selected_year, selected_indicator):
    filtered_df = df[df["Год"] == selected_year].copy()

    # Преобразуем нужные данные для кластеризации
    cluster_data = filtered_df[[selected_indicator, "широта", "долгота"]].dropna()
    if len(cluster_data) < 3:
        return []  # слишком мало точек для кластеризации

    # Стандартизация данных
    scaler = StandardScaler()
    cluster_scaled = scaler.fit_transform(cluster_data[[selected_indicator, "широта", "долгота"]])

    # Кластеризация
    kmeans = KMeans(n_clusters=3, random_state=0, n_init='auto')
    clusters = kmeans.fit_predict(cluster_scaled)

    # Добавим к результату
    cluster_data["Cluster"] = clusters

    # Объединение по индексам с оригинальным df
    filtered_df = filtered_df.join(cluster_data["Cluster"], how="left")

    markerss = []
    for _, row in filtered_df.iterrows():
        if pd.notna(row["широта"]) and pd.notna(row["долгота"]):
            value = row.get(selected_indicator, 'Нет данных')
            cluster = row.get("Cluster", "Не определен")
            markerss.append(
                dl.Marker(
                    position=[row["широта"], row["долгота"]],
                    children=dl.Popup([
                        html.B(f"Город: {row.get('Населённый пункт', 'Неизвестно')}"),
                        html.Br(),
                        f"Год: {row['Год']}",
                        html.Br(),
                        f"Кластер: {cluster}",
                        html.Br(),
                        f"{selected_indicator}: {value}"
                    ])
                )
            )
    return markerss
